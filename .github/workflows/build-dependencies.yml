name: Build dependecies

on:
  workflow_dispatch:

jobs:
  dependencies_linux:
    strategy:
      fail-fast: true
      matrix:
        include:
          - runs-on: ubuntu-latest
            cibw-arch: manylinux_x86_64
#          - runs-on: ubuntu-latest
#            cibw-arch: manylinux_aarch64
    name: Dependecies â€¢ ${{ matrix.cibw-arch }}
    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Make preparations
        run: |
          sudo mkdir /build-tools /build-deps
          sudo chmod 777 /build-tools /build-deps
          echo SCRIPTS_DIR="./build_scripts/linux" >> $GITHUB_ENV
          echo CACHE_RND="3" >>$GITHUB_ENV

      - name: pkg_config
        run: |
          BUILD_CMD="&& sh $SCRIPTS_DIR/$NAME.sh $VERSION"
          echo STUFF_PATH="/build-tools/$NAME-$VERSION" >> $GITHUB_ENV
          echo CACHE_KEY=${{ env.NAME }}-${{ env.VERSION }}-${{ env.CACHE_RND }} >> $GITHUB_ENV
          echo BUILD_CMD_LIST="$BUILD_CMD" >> $GITHUB_ENV
        env:
          NAME: "pkg-config"
          VERSION: "0.29.2"

      - uses: actions/cache@v2
        with:
          path: $STUFF_PATH
          key: ${{ matrix.runs-on }}-${{ matrix.cibw-arch }}-${{ env.CACHE_KEY }}

      - name: cmake
        run: |
          BUILD_CMD="&& sh $SCRIPTS_DIR/$NAME.sh $VERSION"
          echo BUILD_CMD_LIST="$BUILD_CMD_LIST $BUILD_CMD" >> $GITHUB_ENV
        env:
          NAME: "cmake"
          VERSION: "3.21.2"

      - name: autoconf
        run: |
          BUILD_CMD="&& sh $SCRIPTS_DIR/$NAME.sh $VERSION"
          echo STUFF_PATH="/build-tools/$NAME-$VERSION" >> $GITHUB_ENV
          echo CACHE_KEY=${{ env.NAME }}-${{ env.VERSION }}-${{ env.CACHE_RND }} >> $GITHUB_ENV
          echo BUILD_CMD_LIST="$BUILD_CMD_LIST $BUILD_CMD" >> $GITHUB_ENV
        env:
          NAME: "autoconf"
          VERSION: "2.71"

      - uses: actions/cache@v2
        with:
          path: ${{ env.STUFF_PATH }}
          key: ${{ matrix.runs-on }}-${{ matrix.cibw-arch }}-${{ env.CACHE_KEY }}

      - name: automake
        run: |
          BUILD_CMD="&& sh $SCRIPTS_DIR/$NAME.sh $VERSION"
          echo STUFF_PATH="/build-tools/$NAME-$VERSION" >> $GITHUB_ENV
          echo CACHE_KEY=${{ env.NAME }}-${{ env.VERSION }}-${{ env.CACHE_RND }} >> $GITHUB_ENV
          echo BUILD_CMD_LIST="$BUILD_CMD_LIST $BUILD_CMD" >> $GITHUB_ENV
        env:
          NAME: "automake"
          VERSION: "1.16.4"

      - uses: actions/cache@v2
        with:
          path: ${{ env.STUFF_PATH }}
          key: ${{ matrix.runs-on }}-${{ matrix.cibw-arch }}-${{ env.CACHE_KEY }}

      - name: LibreSSL
        run: |
          BUILD_CMD="&& sh $SCRIPTS_DIR/$NAME.sh $VERSION"
          echo STUFF_PATH="/build-deps/$NAME-$VERSION" >> $GITHUB_ENV
          echo CACHE_KEY=${{ env.NAME }}-${{ env.VERSION }}-${{ env.CACHE_RND }} >> $GITHUB_ENV
          echo BUILD_CMD_LIST="$BUILD_CMD_LIST $BUILD_CMD" >> $GITHUB_ENV
        env:
          NAME: "libressl"
          VERSION: "3.1.5"

      - uses: actions/cache@v2
        with:
          path: ${{ env.STUFF_PATH }}
          key: ${{ matrix.runs-on }}-${{ matrix.cibw-arch }}-${{ env.CACHE_KEY }}

      - name: nasm
        run: |
          BUILD_CMD="&& sh $SCRIPTS_DIR/$NAME.sh $VERSION"
          echo STUFF_PATH="/build-tools/$NAME-$VERSION" >> $GITHUB_ENV
          echo CACHE_KEY=${{ env.NAME }}-${{ env.VERSION }}-${{ env.CACHE_RND }} >> $GITHUB_ENV
          echo BUILD_CMD_LIST="$BUILD_CMD_LIST $BUILD_CMD" >> $GITHUB_ENV
        env:
          NAME: "nasm"
          VERSION: "2.15.05"

      - uses: actions/cache@v2
        with:
          path: ${{ env.STUFF_PATH }}
          key: ${{ matrix.runs-on }}-${{ matrix.cibw-arch }}-${{ env.CACHE_KEY }}

      - name: x265
        run: |
          BUILD_CMD="&& sh $SCRIPTS_DIR/$NAME.sh $VERSION"
          echo STUFF_PATH="/build-deps/$NAME-$VERSION" >> $GITHUB_ENV
          echo CACHE_KEY=${{ env.NAME }}-${{ env.VERSION }}-${{ env.CACHE_RND }} >> $GITHUB_ENV
          echo BUILD_CMD_LIST="$BUILD_CMD_LIST $BUILD_CMD" >> $GITHUB_ENV
        env:
          NAME: "x265"
          VERSION: "3.5"

      - uses: actions/cache@v2
        with:
          path: ${{ env.STUFF_PATH }}
          key: ${{ matrix.runs-on }}-${{ matrix.cibw-arch }}-${{ env.CACHE_KEY }}

      - name: libde265
        run: |
          BUILD_CMD="&& sh $SCRIPTS_DIR/$NAME.sh $VERSION"
          echo STUFF_PATH="/build-deps/$NAME-$VERSION" >> $GITHUB_ENV
          echo CACHE_KEY=${{ env.NAME }}-${{ env.VERSION }}-${{ env.CACHE_RND }} >> $GITHUB_ENV
          echo BUILD_CMD_LIST="$BUILD_CMD_LIST $BUILD_CMD" >> $GITHUB_ENV
        env:
          NAME: "libde265"
          VERSION: "1.0.8"

      - uses: actions/cache@v2
        with:
          path: ${{ env.STUFF_PATH }}
          key: ${{ matrix.runs-on }}-${{ matrix.cibw-arch }}-${{ env.CACHE_KEY }}

#      - name: aom
#        run: |
#          BUILD_CMD="&& sh $SCRIPTS_DIR/$NAME.sh $VERSION"
#          echo STUFF_PATH="/build-deps/$NAME*$VERSION" >> $GITHUB_ENV
#          echo CACHE_KEY=${{ env.NAME }}-${{ env.VERSION }}-${{ env.CACHE_RND }} >> $GITHUB_ENV
#          echo BUILD_CMD_LIST="$BUILD_CMD_LIST $BUILD_CMD" >> $GITHUB_ENV
#        env:
#          NAME: "aom"
#          VERSION: "bb35ba9148543f22ba7d8642e4fbd29ae301f5dc"
#
#      - uses: actions/cache@v2
#        with:
#          path: ${{ env.STUFF_PATH }}
#          key: ${{ matrix.runs-on }}-${{ matrix.cibw-arch }}-${{ env.CACHE_KEY }}

      - name: libheif
        run: |
          BUILD_CMD="&& sh $SCRIPTS_DIR/$NAME.sh $VERSION"
          echo STUFF_PATH="/build-deps/$NAME-$VERSION" >> $GITHUB_ENV
          echo CACHE_KEY=${{ env.NAME }}-${{ env.VERSION }}-${{ env.CACHE_RND }} >> $GITHUB_ENV
          echo BUILD_CMD_LIST="$BUILD_CMD_LIST $BUILD_CMD" >> $GITHUB_ENV
        env:
          NAME: "libheif"
          VERSION: "1.12.0"

      - uses: actions/cache@v2
        with:
          path: ${{ env.STUFF_PATH }}
          key: ${{ matrix.runs-on }}-${{ matrix.cibw-arch }}-${{ env.CACHE_KEY }}

      - name: libffi
        run: |
          BUILD_CMD="&& sh $SCRIPTS_DIR/$NAME.sh $VERSION"
          echo STUFF_PATH="/build-deps/$NAME-$VERSION" >> $GITHUB_ENV
          echo CACHE_KEY=${{ env.NAME }}-${{ env.VERSION }}-${{ env.CACHE_RND }} >> $GITHUB_ENV
          echo BUILD_CMD_LIST="$BUILD_CMD_LIST $BUILD_CMD" >> $GITHUB_ENV
        env:
          NAME: "libffi"
          VERSION: "3.3"

      - uses: actions/cache@v2
        with:
          path: ${{ env.STUFF_PATH }}
          key: ${{ matrix.runs-on }}-${{ matrix.cibw-arch }}-${{ env.CACHE_KEY }}

      - name: Set up QEMU
        if: matrix.cibw-arch == 'manylinux_aarch64'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - name: Prepare cibuildwheel
        run: |
          python -m pip install cibuildwheel twine
          OS_PACKAGES="yum install -y -q wget libtool git-all"
          echo BUILD_COMMAND="$OS_PACKAGES && set -ex $BUILD_CMD_LIST" >> $GITHUB_ENV

      - name: x64 linux pre configure enviroment
        if: matrix.cibw-arch == 'manylinux_x86_64'
        run: |
          echo "CIBW_ARCHS=x86_64" >> $GITHUB_ENV
          echo "CIBW_MANYLINUX_X86_64_IMAGE=manylinux2014" >> $GITHUB_ENV
          echo "CIBW_BUILD=cp38-manylinux_x86_64" >> $GITHUB_ENV

      - name: Arm linux pre configure enviroment
        if: matrix.cibw-arch == 'manylinux_aarch64'
        run: |
          echo "CIBW_ARCHS=aarch64" >> $GITHUB_ENV
          echo "CIBW_BUILD=cp38-manylinux_aarch64" >> $GITHUB_ENV

#      - name: Start test build
#        run: |
#          cibuildwheel
#        env:
#          CIBW_TEST_SKIP: "*"
#          CIBW_BEFORE_ALL: ${{ env.BUILD_COMMAND }}

      - name: Check builded wheel
        run: |
          twine check wheelhouse/*

      - name: Upload builded wheel
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: wheelhouse/*.whl
          if-no-files-found: error
