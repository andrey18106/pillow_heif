name: Build dependecies

on:
  workflow_dispatch:

jobs:
  dependencies_linux:
    strategy:
      fail-fast: true
      matrix:
        include:
          - runs-on: ubuntu-latest
            cibw-arch: manylinux_x86_64
#          - runs-on: ubuntu-latest
#            cibw-arch: manylinux_aarch64
    name: Dependecies â€¢ ${{ matrix.cibw-arch }}
    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions/cache@v2
        id: cache_pkg-config
        with:
          path: /build-tools
          key: ${{ matrix.runs-on }}-${{ matrix.cibw-arch }}-91-pkg-config-0.29.2

      - if: steps.cache_pkg-config.outputs.cache-hit != 'true'
        run: |
          BUILD_CMD="&& sh ./scripts/build__pkg-config.sh"
          echo BUILD_CMD_LIST="$BUILD_CMD_LIST $BUILD_CMD" >> $GITHUB_ENV

      - uses: actions/cache@v2
        id: cache_autoconf
        with:
          path: /build-tools
          key: ${{ matrix.runs-on }}-${{ matrix.cibw-arch }}-21-autoconf-2.71

      - if: steps.cache_autoconf.outputs.cache-hit != 'true'
        run: |
          BUILD_CMD="&& sh ./scripts/build__autoconf.sh"
          echo BUILD_CMD_LIST="$BUILD_CMD_LIST $BUILD_CMD" >> $GITHUB_ENV

      - uses: actions/cache@v2
        id: cache_automake
        with:
          path: /build-tools
          key: ${{ matrix.runs-on }}-${{ matrix.cibw-arch }}-21-automake-1.16.4

      - if: steps.cache_automake.outputs.cache-hit != 'true'
        run: |
          BUILD_CMD="&& sh ./scripts/build__cache_automake.sh"
          echo BUILD_CMD_LIST="$BUILD_CMD_LIST $BUILD_CMD" >> $GITHUB_ENV

      - name: DEBUG
        run: |
          echo "1"
          echo $BUILD_CMD_LIST
          echo "2"
          echo "${{ env.BUILD_CMD_LIST }}"

      - name: Preparations for build start
        if: env.BUILD_CMD_LIST != ''
        run: |
          echo BUILD_COMMAND="set -ex $BUILD_CMD_LIST" >> $GITHUB_ENV

      - name: Set up QEMU
        if: env.BUILD_COMMAND != '' && matrix.cibw-arch == 'manylinux_aarch64'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - name: Install requirements
        if: env.BUILD_COMMAND != ''
        run: |
          python -m pip install cibuildwheel

#      - name: Run cibuildwheel
#        run: |
#          cibuildwheel
#        env:
#          CIBW_SKIP: *
