name: Build dependecies

on:
  workflow_dispatch:

jobs:
  dependencies_linux:
    strategy:
      fail-fast: true
      matrix:
        include:
          - runs-on: ubuntu-latest
            cibw-arch: manylinux_x86_64
#          - runs-on: ubuntu-latest
#            cibw-arch: manylinux_aarch64
    name: Dependecies â€¢ ${{ matrix.cibw-arch }}
    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - run: |
          mkdir /build-tools

      - run: |
          echo STUFF="pkg-config" >> $GITHUB_ENV
          echo VERSION="0.29.2" >> $GITHUB_ENV
          echo BUILD_CMD="&& sh ./build_scripts/linux/$STUFF.sh" >> $GITHUB_ENV
          echo STUFF_PATH="/build-tools/$STUFF" >> $GITHUB_ENV
          echo CACHE_STEP_ID="cache_$STUFF" >> $GITHUB_ENV

      - uses: actions/cache@v2
        id: ${{ CACHE_STEP_ID }}
        with:
          path: ${{ STUFF_PATH }}
          key: ${{ matrix.runs-on }}-${{ matrix.cibw-arch }}-${{ STUFF }}-${{ VERSION }}

      - if: steps.${{ CACHE_STEP_ID }}.outputs.cache-hit != 'true'
        run: |
          echo BUILD_CMD_LIST="$BUILD_CMD_LIST $BUILD_CMD" >> $GITHUB_ENV

#      - uses: actions/cache@v2
#        id: cache_autoconf
#        with:
#          path: /build-tools
#          key: ${{ matrix.runs-on }}-${{ matrix.cibw-arch }}-07-autoconf-2.71
#
#      - if: steps.cache_autoconf.outputs.cache-hit != 'true'
#        run: |
#          BUILD_CMD="&& sh ./build_scripts/linux/autoconf.sh"
#          echo BUILD_CMD_LIST="$BUILD_CMD_LIST $BUILD_CMD" >> $GITHUB_ENV
#
#      - uses: actions/cache@v2
#        id: cache_automake
#        with:
#          path: /build-tools
#          key: ${{ matrix.runs-on }}-${{ matrix.cibw-arch }}-08-automake-1.16.4
#
#      - if: steps.cache_automake.outputs.cache-hit != 'true'
#        run: |
#          BUILD_CMD="&& sh ./build_scripts/linux/automake.sh"
#          echo BUILD_CMD_LIST="$BUILD_CMD_LIST $BUILD_CMD" >> $GITHUB_ENV

      - name: Preparations for build start
        if: env.BUILD_CMD_LIST != ''
        run: |
          echo BUILD_COMMAND="set -ex $BUILD_CMD_LIST" >> $GITHUB_ENV
          echo "CIBW_BUILD=*-${{ matrix.cibw-arch }}" >> $GITHUB_ENV

      - name: Set up QEMU
        if: env.BUILD_COMMAND != '' && matrix.cibw-arch == 'manylinux_aarch64'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - name: Install requirements
        if: env.BUILD_COMMAND != ''
        run: |
          python -m pip install cibuildwheel

      - name: x64 linux pre configure enviroment
        if: env.BUILD_COMMAND != '' && matrix.cibw-arch == 'manylinux_x86_64'
        run: |
          echo "CIBW_ARCHS=x86_64" >> $GITHUB_ENV
          echo "CIBW_MANYLINUX_X86_64_IMAGE=manylinux2014" >> $GITHUB_ENV
          echo "CIBW_BUILD=cp38-manylinux_x86_64" >> $GITHUB_ENV

      - name: Arm linux pre configure enviroment
        if: env.BUILD_COMMAND != '' && matrix.cibw-arch == 'manylinux_aarch64'
        run: |
          echo "CIBW_ARCHS=aarch64" >> $GITHUB_ENV
          echo "CIBW_BUILD=cp38-manylinux_aarch64" >> $GITHUB_ENV

      - name: Start building
        if: env.BUILD_COMMAND != ''
        run: |
          cibuildwheel --config-file "{package}/build_scripts/dependencies.toml"
        env:
          CIBW_BEFORE_ALL: ${{ env.BUILD_COMMAND }}
          CIBW_TEST_SKIP: "*"
          CIBW_REPAIR_WHEEL_COMMAND: ""
