name: Build dependecies

on:
  workflow_dispatch:

jobs:
  dependencies_linux:
    strategy:
      fail-fast: true
      matrix:
        include:
          - runs-on: ubuntu-latest
            cibw-arch: manylinux_x86_64
#          - runs-on: ubuntu-latest
#            cibw-arch: manylinux_aarch64
    name: Dependecies â€¢ ${{ matrix.cibw-arch }}
    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Make preparations
        run: |
          sudo mkdir /build-tools
          sudo chmod 777 /build-tools
          echo SCRIPTS_DIR="./build_scripts/linux" >> $GITHUB_ENV
          echo CACHE_RND="1" >>$GITHUB_ENV

      - name: pkg_config
        run: |
          BUILD_CMD="&& sh $SCRIPTS_DIR/$NAME.sh $VERSION"
          echo STUFF_PATH="/build-tools/$NAME-$VERSION" >> $GITHUB_ENV
          echo CACHE_KEY=${{ env.NAME }}-${{ env.VERSION }}-${{ env.CACHE_RND }} >> $GITHUB_ENV
          echo BUILD_CMD_LIST="$BUILD_CMD_LIST $BUILD_CMD" >> $GITHUB_ENV
        env:
          NAME: "pkg-config"
          VERSION: "0.29.2"

      - uses: actions/cache@v2
        with:
          path: ${{ env.STUFF_PATH }}
          key: ${{ matrix.runs-on }}-${{ matrix.cibw-arch }}-${{ env.CACHE_KEY }}

      - name: cmake
        run: |
          BUILD_CMD="&& sh $SCRIPTS_DIR/$NAME.sh $VERSION"
          echo BUILD_CMD_LIST="$BUILD_CMD_LIST $BUILD_CMD" >> $GITHUB_ENV
        env:
          NAME: "cmake"
          VERSION: "3.21.2"

      - name: autoconf
        run: |
          BUILD_CMD="&& sh $SCRIPTS_DIR/$NAME.sh $VERSION"
          echo STUFF_PATH="/build-tools/$NAME-$VERSION" >> $GITHUB_ENV
          echo CACHE_KEY=${{ env.NAME }}-${{ env.VERSION }}-${{ env.CACHE_RND }} >> $GITHUB_ENV
          echo BUILD_CMD_LIST="$BUILD_CMD_LIST $BUILD_CMD" >> $GITHUB_ENV
        env:
          NAME: "autoconf"
          VERSION: "2.71"

      - uses: actions/cache@v2
        with:
          path: ${{ env.STUFF_PATH }}
          key: ${{ matrix.runs-on }}-${{ matrix.cibw-arch }}-${{ env.CACHE_KEY }}

      - name: automake
        run: |
          BUILD_CMD="&& sh $SCRIPTS_DIR/$NAME.sh $VERSION"
          echo STUFF_PATH="/build-tools/$NAME-$VERSION" >> $GITHUB_ENV
          echo CACHE_KEY=${{ env.NAME }}-${{ env.VERSION }}-${{ env.CACHE_RND }} >> $GITHUB_ENV
          echo BUILD_CMD_LIST="$BUILD_CMD_LIST $BUILD_CMD" >> $GITHUB_ENV
        env:
          NAME: "automake"
          VERSION: "1.16.4"

      - uses: actions/cache@v2
        with:
          path: ${{ env.STUFF_PATH }}
          key: ${{ matrix.runs-on }}-${{ matrix.cibw-arch }}-${{ env.CACHE_KEY }}

      - name: Set up QEMU
        if: matrix.cibw-arch == 'manylinux_aarch64'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - name: Prepare cibuildwheel
        run: |
          python -m pip install cibuildwheel
          OS_PACKAGES="yum install -y wget libtool git-all openssl-devel"
          echo BUILD_COMMAND="$OS_PACKAGES && set -ex $BUILD_CMD_LIST" >> $GITHUB_ENV

      - name: Debug
        run: |
          echo $STUFF_PATH
          echo $SCRIPTS_DIR
          echo $CACHE_KEY
          echo $BUILD_CMD_LIST
          echo $BUILD_COMMAND

      - name: x64 linux pre configure enviroment
        if: matrix.cibw-arch == 'manylinux_x86_64'
        run: |
          echo "CIBW_ARCHS=x86_64" >> $GITHUB_ENV
          echo "CIBW_MANYLINUX_X86_64_IMAGE=manylinux2014" >> $GITHUB_ENV
          echo "CIBW_BUILD=cp38-manylinux_x86_64" >> $GITHUB_ENV

      - name: Arm linux pre configure enviroment
        if: matrix.cibw-arch == 'manylinux_aarch64'
        run: |
          echo "CIBW_ARCHS=aarch64" >> $GITHUB_ENV
          echo "CIBW_BUILD=cp38-manylinux_aarch64" >> $GITHUB_ENV

      - name: Start test build
        run: |
          cibuildwheel --config-file "{package}/build_scripts/dependencies.toml"
        env:
          CIBW_TEST_SKIP: "*"
          CIBW_REPAIR_WHEEL_COMMAND: ""
          CIBW_BEFORE_ALL: ${{ env.BUILD_COMMAND }}
