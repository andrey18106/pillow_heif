name: Build dependecies

on:
  workflow_dispatch:

jobs:
  dependencies_linux:
    strategy:
      fail-fast: true
      matrix:
        include:
          - runs-on: ubuntu-latest
            cibw-arch: manylinux_x86_64
#          - runs-on: ubuntu-latest
#            cibw-arch: manylinux_aarch64
    name: Dependecies â€¢ ${{ matrix.cibw-arch }}
    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive
        env:
          BUILD_LIST: "set -ex"

      - name: Check for pkg-config
        uses: actions/cache@v2
        id: cache_pkg-config
        with:
          path: /build-tools
          key: ${{ matrix.runs-on }}-${{ matrix.cibw-arch }}--pkg-config-0.29.2
        env:
          BUILD_CMD: "&& sh ./scripts/build__pkg-config.sh"

      - name: Add to build list
        if: steps.cache_pkg-config.outputs.cache-hit != 'true'
        run: echo "BUILD_LIST=$BUILD_LIST $BUILD_CMD" >> $GITHUB_ENV

      - name: Check for autoconf
        uses: actions/cache@v2
        id: cache_autoconf
        with:
          path: /build-tools
          key: ${{ matrix.runs-on }}-${{ matrix.cibw-arch }}--autoconf-2.71
        env:
          BUILD_CMD: "&& sh ./scripts/build__autoconf.sh"

      - name: Add to build list
        if: steps.cache_autoconf.outputs.cache-hit != 'true'
        run: echo "BUILD_LIST=$BUILD_LIST $BUILD_CMD" >> $GITHUB_ENV

      - name: Set up QEMU
        if: matrix.cibw-arch == 'manylinux_aarch64'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - name: Install requirements
        run: |
          python -m pip install cibuildwheel
          echo "$BUILD_LIST"

#      - name: Run cibuildwheel
#        run: |
#          cibuildwheel
#        env:
#          CIBW_SKIP: *
