name: Build from source(Linux)

on:
  workflow_dispatch:
  workflow_call:
  pull_request:
    branches: [master]
    types: [opened, reopened, edited]
    paths:
      - 'libheif/linux/**'
      - 'libheif/linux_*.py'
      - 'libheif/build.py'
      - 'libheif/public_api.h'
      - 'setup.*'
      - 'pyproject.toml'
  push:
    branches: [master]
    paths:
      - 'libheif/linux/**'
      - 'libheif/linux_*.py'
      - 'libheif/build.py'
      - 'libheif/public_api.h'
      - 'setup.*'
      - 'pyproject.toml'

concurrency:
  group: src_linux-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test_src_build:
    name: ${{ matrix.docker_file }}-${{ matrix.arch }}
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[docs]')"
    strategy:
      matrix:
        arch: ["amd64", "arm64", "arm/v7"]
#        docker_file: ["Alpine_3_15", "Alpine_3_17", "Debian_10", "Ubuntu_22_04"]
        docker_file: ["Debian_10", "Ubuntu_22_04"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Requirements
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/from_src/${{ matrix.docker_file }}.Dockerfile
          platforms: linux/${{ matrix.arch }}
          push: false
          cache-from: type=gha,scope=${{ matrix.docker_file }}-${{ matrix.arch }}
          cache-to: type=gha,mode=min,scope=${{ matrix.docker_file }}-${{ matrix.arch }}
          target: base

      - name: Build & Test Pillow-Heif
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/from_src/${{ matrix.docker_file }}.Dockerfile
          platforms: linux/${{ matrix.arch }}
          push: false
          cache-from: type=gha,scope=${{ matrix.docker_file }}-${{ matrix.arch }}
          target: build_test
